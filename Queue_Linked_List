#include <iostream>
#include <stdio.h>
#include <string.h>
using namespace std;

typedef struct Node
{
    int data;
    Node* link;
};

Node* front = NULL;
Node* rear = NULL;

void enqueue(int d)
{
    Node* temp = new Node();
    temp->data = d;
    temp->link = NULL;
    if ((front == NULL) && (rear == NULL))
    {
        front = temp;
        rear = temp;
    }
    else
    {
        rear->link = temp;
        rear = temp;
    }
}

void dequeue()
{
    int data;
    Node* temp;
    if (front == NULL)
        cout << "\nQueue Empty";
    else
    {
        temp = front;
        data = temp->data;
        cout << "\nDequeue'd element: " << data;
        if (front == rear)
            front = rear = NULL;
        else
        {
            front = front->link;
            delete(temp);
        }
    }
}

void disp()
{
    Node* d;
    d = front;
    while (d != NULL)
    {
        cout << d->data << " ";
        d = d->link;
    }
}

void peekf()
{
    cout << "\nFront element: " << front->data;
}

void peekr()
{
    cout << "\nRear element: " << rear->data;
}

int main()
{
    char opt;
    do
    {
        int ch;
        cout << "\n1. Enqueue elements\n2. Dequeue elements\n3. Display Queue\n4. Peek at front element\n5. Peek at rear element\nChoose option: ";
        cin >> ch;
        switch (ch)
        {
        case 1: {
            int data;
            cout << "\nEnter the data to be pushed: ";
            cin >> data;
            enqueue(data);
            cout << "\nEnqueue'd element: " << data;
        }
              break;
        case 2: {
            dequeue();
        }
              break;
        case 3: {
            disp();
        }
              break;
        case 4: {
            peekf();
        }
              break;
        case 5: {
            peekr();
        }
              break;
        default: cout << "\n Enter the correct option";
        }
        cout << "\nDo you want to continue(Y/N): ";
        cin >> opt;
    } while (toupper(opt) == 'Y');
    return(0);
}
