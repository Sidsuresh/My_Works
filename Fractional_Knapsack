#include <iostream>
#include <stdio.h>
#include <string>
#include <ctype.h>
#include <string.h>
using namespace std;

typedef struct Items
{
	string name;
	float Profit;
	float Weight;
	float PbW;
	float Unit;
};

Items I[50];

void input(int x)
{
	
	for (int j = 0; j < x; ++j)
	{
		cin.clear();
		cin.ignore(numeric_limits<streamsize>::max(), '\n');
		string s;
		cout << "\nEnter the name of item: ";
		getline(cin, I[j].name);
		cout << "\nEnter the profit: ";
		cin >> I[j].Profit;
		cout << "\nEnter the weight: ";
		cin >> I[j].Weight;
		I[j].PbW = I[j].Profit / I[j].Weight;
		I[j].Unit = 0;
	}
}

int max(int x)
{
	int m;
	float max = 0;
	float maxw = 0;
	for (int i = 0; i < x; ++i)
	{
		if ((max < I[i].PbW) && (I[i].Unit == 0))
		{
			max = I[i].PbW;
			m = i;
		}
	}
	return(m);
}

void disp(int x)
{
	for (int i = 0; i < x; ++i)
	{
		cout << "\nItemname: " << I[i].name << "\tNo of fractional units: " << I[i].Unit;
	}
}

float fracknap(int x, float weight)
{
	float maxP = 0;
	while (weight > 0)
	{
		int ind = max(x);
		if (weight >= I[ind].Weight)
		{
			I[ind].Unit = 1;
			weight -= I[ind].Weight;
			cout << "\nWeight: " << weight;
		}
		else
		{
			I[ind].Unit = weight / I[ind].Weight;
			weight = 0;
			cout << "\nWeight: " << weight;
		}
	}

	cout << "\nFractional Units of each item: ";
	disp(x);

	for (int i = 0; i < x; ++i)
	{
		maxP += I[i].Unit * I[i].Profit;
	}

	return(maxP);
}

int main()
{
	int noi;
	float totW;
	cout << "\nEnter the total number of items: ";
	cin >> noi;
	cout << "\nEnter the total weight of the knapsack: ";
	cin >> totW;
	input(noi);
	float maxProfit = fracknap(noi, totW);
	cout << "\nMaximum Profit: " << maxProfit;
	return(0);
}
