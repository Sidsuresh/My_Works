#include <iostream>
using namespace std;

const int TSize = 20;

struct HTE
{
    int v;

    HTE* link;

    HTE(int v) 
    {
        this->v = v;
        this->link = NULL;
    }
};

class HT 
{
public:
    HTE** ht;

    HT() 
    {
        ht = new HTE * [TSize];
        for (int i = 0; i < TSize; i++)
            ht[i] = NULL;
    }

    int HashFunc(int key) 
    {
        return key % TSize;
    }

    void Insert(int v)
    {
        int hash_v = HashFunc(v);
        HTE* p = NULL;
        HTE* en = ht[hash_v];
        while (en != NULL) 
        {
            p = en;
            en = en->link;
        }
        if (en == NULL) 
        {
            en = new HTE(v);
            if (p == NULL) 
            {
                ht[hash_v] = en;
            }
            else 
            {
                p->link = en;
            }
        }
        else 
        {
            en->v = v;
        }
    }

    void SK(int k)
    {
        HTE* p = ht[k];
        while (p != NULL)
        {
            cout << p->v << " ";
            p = p->link;
        }
        cout << endl;
    }

    void ST()
    {
        for (int i = 0; i < TSize; ++i)
        {
            HTE* p;
            cout << "\n" << i << ": ";
            p = ht[i];
            while (p != NULL)
            {
                cout << p->v << " ";
                p = p->link;
            }
        }
        cout << endl;
    }

    ~HT() 
    {
        delete[] ht;
    }
};

int main() 
{
    HT hash;
    int k, v;
    int c;
    char opt;
    do  
    {
        cout << "\nHashing using Seperate Chaining"<<endl;
        cout << "1.Insert element into the table" << endl;
        cout << "2.Search element from the key" << endl;
        cout << "3.Display hash table" << endl;
        cout << "Enter your choice: ";
        cin >> c;
        switch (c) 
        {
        case 1:
            cout << "Enter element to be inserted: ";
            cin >> v;   
            hash.Insert(v);
            break;
        case 2:
            cout << "Enter key of the element to be searched(0-19): ";
            cin >> k;
            hash.SK(k);
            break;
        case 3:
            cout << "\nHash Table: " << endl;
            hash.ST();
            break;
        default:
            cout << "\nEnter correct option\n";
        }
        cout << "\nDo you want to continue(Y/N): ";
        cin >> opt;
    } while (toupper(opt) == 'Y');
    return 0;
}
